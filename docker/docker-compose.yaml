x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

services:
  consul:
    image: hashicorp/consul:1.17
    container_name: consul-server
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -server -ui -client=0.0.0.0 -bootstrap-expect=1 -data-dir=/consul/data

  svc-discovery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: svc-discovery
    environment:
      - DISCOVERY_INTERVAL=10
      - CONSUL_HTTP_ADDR=localhost:8500
      - CONSUL_HTTP_TOKEN=your-consul-token
    network_mode: "host"
    user: root
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.76.1
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml" ]
    environment:
      - JAEGER_SERVICE_HOST=jaeger
    volumes:
      - ./telemetry/otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
      - "4317:4317"     # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    networks:
      - discovery
    depends_on:
      - jaeger
    logging: *logging

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - cascade
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=secret
  #   restart: unless-stopped
  #   volumes:
  #     - ./telemetry/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  prometheus:
    image: quay.io/prometheus/prometheus:v2.43.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./telemetry/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    networks:
      - discovery
    ports:
      - "9090:9090"     # Prometheus UI
    logging: *logging

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    command:
      - "--memory.max-traces"
      - "10000"
      - "--query.base-path"
      - "/jaeger"
      - "--prometheus.server-url"
      - "http://prometheus:9090"
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    networks:
      - discovery
    ports:
      - "16686:16686" # Jaeger UI
      - "4317"                           # OTLP gRPC default port
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus
    logging: *logging

networks:
  discovery:
    driver: bridge

